# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-07-02 14:59
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BfAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=16)),
                ('nickname', models.CharField(max_length=50)),
                ('moble', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=32)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('last_login_time', models.IntegerField()),
                ('last_login_ip', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfAdver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('url', models.CharField(max_length=100)),
                ('img', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('look', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_adver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(blank=True, null=True)),
                ('adminid', models.IntegerField()),
                ('type', models.CharField(max_length=100)),
                ('hits', models.IntegerField()),
                ('footer', models.IntegerField()),
                ('index', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('img', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'bf_article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfArticleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('index', models.CharField(max_length=50)),
                ('footer', models.CharField(max_length=50)),
                ('shang', models.CharField(max_length=50)),
                ('content', models.TextField(blank=True, null=True)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_article_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfAuthExtend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('extend_id', models.IntegerField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_auth_extend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfAuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=20)),
                ('type', models.IntegerField()),
                ('title', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=80)),
                ('status', models.IntegerField()),
                ('rules', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'bf_auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfAuthGroupAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField()),
                ('group_id', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_auth_group_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfAuthRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=20)),
                ('type', models.IntegerField()),
                ('name', models.CharField(max_length=80)),
                ('title', models.CharField(max_length=20)),
                ('status', models.IntegerField()),
                ('condition', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'bf_auth_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfCandyLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adminid', models.IntegerField()),
                ('adminname', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('addtime', models.IntegerField()),
                ('realnum', models.DecimalField(decimal_places=6, max_digits=20)),
                ('person', models.IntegerField()),
                ('coinname', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'bf_candy_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfCandyReward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('addtime', models.IntegerField()),
                ('coinname', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'bf_candy_reward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfCoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('img', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('fee_bili', models.CharField(max_length=50)),
                ('endtime', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('fee_meitian', models.CharField(max_length=200)),
                ('dj_zj', models.CharField(max_length=200)),
                ('dj_dk', models.CharField(max_length=200)),
                ('dj_yh', models.CharField(max_length=200)),
                ('dj_mm', models.CharField(max_length=200)),
                ('zr_zs', models.CharField(max_length=50)),
                ('zr_jz', models.CharField(max_length=50)),
                ('zr_dz', models.CharField(max_length=50)),
                ('zr_sm', models.CharField(max_length=50)),
                ('zc_sm', models.CharField(max_length=50)),
                ('zc_fee', models.DecimalField(decimal_places=5, max_digits=12)),
                ('zc_user', models.CharField(max_length=50)),
                ('zc_min', models.DecimalField(decimal_places=5, max_digits=20)),
                ('zc_max', models.DecimalField(decimal_places=5, max_digits=20)),
                ('zc_jz', models.CharField(max_length=50)),
                ('zc_zd', models.CharField(max_length=50)),
                ('js_yw', models.CharField(max_length=50)),
                ('js_sm', models.TextField(blank=True, null=True)),
                ('js_qb', models.CharField(max_length=50)),
                ('js_ym', models.CharField(max_length=50)),
                ('js_gw', models.CharField(max_length=50)),
                ('js_lt', models.CharField(max_length=50)),
                ('js_wk', models.CharField(max_length=50)),
                ('cs_yf', models.CharField(max_length=50)),
                ('cs_sf', models.CharField(max_length=50)),
                ('cs_fb', models.CharField(max_length=50)),
                ('cs_qk', models.CharField(max_length=50)),
                ('cs_zl', models.CharField(max_length=50)),
                ('cs_cl', models.CharField(max_length=50)),
                ('cs_zm', models.DecimalField(decimal_places=6, max_digits=20)),
                ('cs_nd', models.CharField(max_length=50)),
                ('cs_jl', models.CharField(max_length=50)),
                ('cs_ts', models.CharField(max_length=50)),
                ('cs_bz', models.CharField(max_length=50)),
                ('tp_zs', models.CharField(max_length=50)),
                ('tp_js', models.CharField(max_length=50)),
                ('tp_yy', models.CharField(max_length=50)),
                ('tp_qj', models.CharField(max_length=50)),
                ('sh_zd', models.IntegerField()),
                ('dj_zj_mytx', models.CharField(blank=True, max_length=200, null=True)),
                ('dj_dk_mytx', models.CharField(blank=True, max_length=200, null=True)),
                ('dj_yh_mytx', models.CharField(blank=True, max_length=200, null=True)),
                ('dj_mm_mytx', models.CharField(blank=True, max_length=200, null=True)),
                ('zc_fee_bili', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ranking', models.IntegerField(blank=True, null=True)),
                ('js_qk', models.CharField(max_length=50)),
                ('js_bp', models.CharField(max_length=50)),
                ('js_zcp', models.CharField(max_length=11)),
                ('js_en', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bf_coin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfCoinJson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('data', models.CharField(max_length=500)),
                ('type', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_coin_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footer_logo', models.CharField(max_length=200)),
                ('huafei_zidong', models.CharField(max_length=200)),
                ('kefu', models.CharField(max_length=200)),
                ('huafei_openid', models.CharField(max_length=200)),
                ('huafei_appkey', models.CharField(max_length=200)),
                ('index_lejimum', models.CharField(max_length=200)),
                ('login_verify', models.CharField(max_length=200)),
                ('fee_meitian', models.CharField(max_length=200)),
                ('top_name', models.CharField(max_length=200)),
                ('web_name', models.CharField(max_length=200)),
                ('web_title', models.CharField(max_length=200)),
                ('web_logo', models.CharField(max_length=200)),
                ('web_llogo_small', models.CharField(max_length=200)),
                ('web_keywords', models.CharField(blank=True, max_length=200, null=True)),
                ('web_description', models.CharField(blank=True, max_length=200, null=True)),
                ('web_close', models.CharField(blank=True, max_length=255, null=True)),
                ('web_close_cause', models.CharField(blank=True, max_length=255, null=True)),
                ('web_icp', models.CharField(blank=True, max_length=255, null=True)),
                ('web_cnzz', models.CharField(blank=True, max_length=255, null=True)),
                ('web_ren', models.CharField(blank=True, max_length=255, null=True)),
                ('web_reg', models.TextField(blank=True, null=True)),
                ('market_mr', models.CharField(blank=True, max_length=255, null=True)),
                ('xnb_mr', models.CharField(blank=True, max_length=255, null=True)),
                ('rmb_mr', models.CharField(blank=True, max_length=255, null=True)),
                ('web_waring', models.CharField(blank=True, max_length=255, null=True)),
                ('moble_type', models.CharField(blank=True, max_length=255, null=True)),
                ('moble_url', models.CharField(blank=True, max_length=255, null=True)),
                ('moble_user', models.CharField(blank=True, max_length=255, null=True)),
                ('moble_pwd', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_moble', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_weibo', models.TextField(blank=True, null=True)),
                ('contact_tqq', models.TextField(blank=True, null=True)),
                ('contact_qq', models.TextField(blank=True, null=True)),
                ('contact_qqun', models.TextField(blank=True, null=True)),
                ('contact_weixin', models.TextField(blank=True, null=True)),
                ('contact_weixin_img', models.TextField(blank=True, null=True)),
                ('contact_email', models.TextField(blank=True, null=True)),
                ('contact_alipay', models.TextField(blank=True, null=True)),
                ('contact_alipay_img', models.TextField(blank=True, null=True)),
                ('contact_bank', models.TextField(blank=True, null=True)),
                ('user_truename', models.TextField(blank=True, null=True)),
                ('user_moble', models.TextField(blank=True, null=True)),
                ('user_alipay', models.TextField(blank=True, null=True)),
                ('user_bank', models.TextField(blank=True, null=True)),
                ('user_text_truename', models.TextField(blank=True, null=True)),
                ('user_text_moble', models.TextField(blank=True, null=True)),
                ('user_text_alipay', models.TextField(blank=True, null=True)),
                ('user_text_bank', models.TextField(blank=True, null=True)),
                ('user_text_log', models.TextField(blank=True, null=True)),
                ('user_text_password', models.TextField(blank=True, null=True)),
                ('user_text_paypassword', models.TextField(blank=True, null=True)),
                ('mytx_min', models.TextField(blank=True, null=True)),
                ('mytx_max', models.TextField(blank=True, null=True)),
                ('mytx_bei', models.TextField(blank=True, null=True)),
                ('mytx_coin', models.TextField(blank=True, null=True)),
                ('mytx_fee_min', models.FloatField(blank=True, null=True)),
                ('mytx_fee', models.TextField(blank=True, null=True)),
                ('trade_min', models.TextField(blank=True, null=True)),
                ('trade_max', models.TextField(blank=True, null=True)),
                ('trade_limit', models.TextField(blank=True, null=True)),
                ('trade_text_log', models.TextField(blank=True, null=True)),
                ('issue_ci', models.TextField(blank=True, null=True)),
                ('issue_jian', models.TextField(blank=True, null=True)),
                ('issue_min', models.TextField(blank=True, null=True)),
                ('issue_max', models.TextField(blank=True, null=True)),
                ('money_min', models.TextField(blank=True, null=True)),
                ('money_max', models.TextField(blank=True, null=True)),
                ('money_bei', models.TextField(blank=True, null=True)),
                ('money_text_index', models.TextField(blank=True, null=True)),
                ('money_text_log', models.TextField(blank=True, null=True)),
                ('money_text_type', models.TextField(blank=True, null=True)),
                ('invit_type', models.TextField(blank=True, null=True)),
                ('invit_fee1', models.TextField(blank=True, null=True)),
                ('invit_fee2', models.TextField(blank=True, null=True)),
                ('invit_fee3', models.TextField(blank=True, null=True)),
                ('invit_text_txt', models.TextField(blank=True, null=True)),
                ('invit_text_log', models.TextField(blank=True, null=True)),
                ('index_notice_1', models.TextField(blank=True, null=True)),
                ('index_notice_11', models.TextField(blank=True, null=True)),
                ('index_notice_2', models.TextField(blank=True, null=True)),
                ('index_notice_22', models.TextField(blank=True, null=True)),
                ('index_notice_3', models.TextField(blank=True, null=True)),
                ('index_notice_33', models.TextField(blank=True, null=True)),
                ('index_notice_4', models.TextField(blank=True, null=True)),
                ('index_notice_44', models.TextField(blank=True, null=True)),
                ('text_footer', models.TextField(blank=True, null=True)),
                ('shop_text_index', models.TextField(blank=True, null=True)),
                ('shop_text_log', models.TextField(blank=True, null=True)),
                ('shop_text_addr', models.TextField(blank=True, null=True)),
                ('shop_text_view', models.TextField(blank=True, null=True)),
                ('huafei_text_index', models.DecimalField(decimal_places=4, max_digits=10)),
                ('huafei_text_log', models.TextField(blank=True, null=True)),
                ('addtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('shop_coin', models.CharField(max_length=200)),
                ('shop_logo', models.CharField(max_length=200)),
                ('shop_login', models.CharField(max_length=200)),
                ('index_html', models.CharField(max_length=50)),
                ('trade_hangqing', models.CharField(max_length=50)),
                ('trade_moshi', models.CharField(max_length=50)),
                ('mytx_day_max', models.DecimalField(decimal_places=0, max_digits=13)),
                ('en_web_reg', models.TextField(blank=True, null=True)),
                ('tui_jy_jl', models.DecimalField(blank=True, decimal_places=4, max_digits=13, null=True)),
                ('before_cpc', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('rank_num', models.IntegerField(blank=True, null=True)),
                ('ethaddress', models.CharField(blank=True, max_length=100, null=True)),
                ('ethpassword', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bf_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfDaohang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('entitle', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'bf_daohang',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfEthHash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ethhash', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(max_length=100)),
                ('addtime', models.IntegerField()),
                ('isdeal', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bf_eth_hash',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfEthTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zc_addr', models.CharField(max_length=100)),
                ('zr_addr', models.CharField(max_length=100)),
                ('zc_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('addtime', models.IntegerField()),
                ('zchash', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'bf_eth_transfer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.CharField(max_length=255)),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField(blank=True, null=True)),
                ('subject', models.CharField(max_length=50)),
                ('attachone', models.CharField(blank=True, max_length=200, null=True)),
                ('attachtwo', models.CharField(blank=True, max_length=200, null=True)),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=50)),
                ('isread', models.IntegerField()),
                ('txid', models.CharField(blank=True, max_length=100, null=True)),
                ('freshtime', models.IntegerField(blank=True, null=True)),
                ('userstatus', models.IntegerField(blank=True, null=True)),
                ('adminstatus', models.IntegerField(blank=True, null=True)),
                ('recordno', models.BigIntegerField()),
            ],
            options={
                'db_table': 'bf_feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfFinance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('coinname', models.CharField(max_length=50)),
                ('num_a', models.DecimalField(decimal_places=8, max_digits=20)),
                ('num_b', models.DecimalField(decimal_places=8, max_digits=20)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('type', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('nameid', models.IntegerField()),
                ('remark', models.CharField(max_length=50)),
                ('mum_a', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum_b', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('move', models.CharField(max_length=50)),
                ('addtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_finance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfFinanceLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('adminname', models.CharField(blank=True, max_length=50, null=True)),
                ('addtime', models.IntegerField()),
                ('plusminus', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('optype', models.IntegerField()),
                ('cointype', models.IntegerField()),
                ('old_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('new_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('userid', models.IntegerField()),
                ('adminid', models.IntegerField()),
                ('addip', models.CharField(max_length=100)),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_finance_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfFooter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100)),
                ('img', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_footer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=16, null=True)),
                ('fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('need_cpc', models.IntegerField(blank=True, null=True)),
                ('num', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bf_grade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfGradeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('gid', models.IntegerField(blank=True, null=True)),
                ('mouth', models.IntegerField(blank=True, null=True)),
                ('num', models.IntegerField(blank=True, null=True)),
                ('addtime', models.IntegerField(blank=True, null=True)),
                ('endtime', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('style', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bf_grade_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfIncentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('addtime', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_incentive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfIncentiveLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adminid', models.IntegerField()),
                ('admin', models.CharField(max_length=200)),
                ('amount', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('realnum', models.DecimalField(decimal_places=6, max_digits=20)),
                ('person', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_incentive_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfInvit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('userid', models.IntegerField()),
                ('invit', models.IntegerField()),
                ('name', models.IntegerField()),
                ('type', models.IntegerField()),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('buysell', models.IntegerField()),
                ('orderno', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bf_invit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100)),
                ('img', models.CharField(max_length=100)),
                ('mytx', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('look_type', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMarket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('round', models.CharField(max_length=255)),
                ('fee_buy', models.CharField(max_length=255)),
                ('fee_sell', models.CharField(max_length=255)),
                ('buy_min', models.CharField(max_length=255)),
                ('buy_max', models.CharField(max_length=255)),
                ('sell_min', models.CharField(max_length=255)),
                ('sell_max', models.CharField(max_length=255)),
                ('trade_min', models.CharField(max_length=255)),
                ('trade_max', models.CharField(max_length=255)),
                ('invit_buy', models.CharField(max_length=50)),
                ('invit_sell', models.CharField(max_length=50)),
                ('invit_1', models.CharField(max_length=50)),
                ('invit_2', models.CharField(max_length=50)),
                ('invit_3', models.CharField(max_length=50)),
                ('zhang', models.CharField(max_length=255)),
                ('die', models.CharField(max_length=255)),
                ('hou_price', models.CharField(max_length=255)),
                ('tendency', models.TextField(blank=True, null=True)),
                ('trade', models.IntegerField()),
                ('new_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('buy_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sell_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('min_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('max_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('volume', models.DecimalField(decimal_places=8, max_digits=20)),
                ('change', models.DecimalField(decimal_places=8, max_digits=20)),
                ('api_min', models.DecimalField(decimal_places=8, max_digits=20)),
                ('api_max', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('start_time', models.IntegerField(blank=True, null=True)),
                ('stop_time', models.IntegerField(blank=True, null=True)),
                ('start_minute', models.IntegerField(blank=True, null=True)),
                ('stop_minute', models.IntegerField(blank=True, null=True)),
                ('agree6', models.IntegerField(blank=True, null=True)),
                ('agree7', models.IntegerField(blank=True, null=True)),
                ('trade_num_min', models.CharField(max_length=30)),
                ('is_zhu', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_market',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMarketJson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('data', models.CharField(max_length=500)),
                ('type', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_market_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('pid', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('url', models.CharField(max_length=255)),
                ('hide', models.IntegerField()),
                ('tip', models.CharField(max_length=255)),
                ('group', models.CharField(blank=True, max_length=50, null=True)),
                ('is_dev', models.IntegerField()),
                ('ico_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'bf_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMycz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('num', models.DecimalField(decimal_places=2, max_digits=11)),
                ('mum', models.DecimalField(decimal_places=2, max_digits=11)),
                ('type', models.CharField(max_length=50)),
                ('tradeno', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=250)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('alipay_truename', models.CharField(blank=True, max_length=20, null=True)),
                ('alipay_account', models.CharField(blank=True, max_length=35, null=True)),
                ('ewmname', models.CharField(max_length=50)),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bank', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'bf_mycz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMyczInvit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('invitid', models.IntegerField()),
                ('num', models.DecimalField(decimal_places=2, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('coinname', models.CharField(max_length=50)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('remark', models.CharField(max_length=250)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_mycz_invit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMyczType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max', models.CharField(max_length=200)),
                ('min', models.CharField(max_length=200)),
                ('kaihu', models.CharField(max_length=200)),
                ('truename', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('img', models.CharField(max_length=50)),
                ('extra', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'bf_mycz_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMytx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('num', models.IntegerField()),
                ('fee', models.DecimalField(decimal_places=2, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=2, max_digits=20)),
                ('truename', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=32)),
                ('bank', models.CharField(max_length=250)),
                ('bankprov', models.CharField(max_length=50)),
                ('bankcity', models.CharField(max_length=50)),
                ('bankaddr', models.CharField(max_length=50)),
                ('bankcard', models.CharField(max_length=200)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_mytx',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMyzc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('coinname', models.CharField(max_length=200)),
                ('txid', models.CharField(max_length=200)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('to_user', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_myzc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMyzcFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('coinname', models.CharField(max_length=200)),
                ('txid', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=200)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_myzc_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMyzr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('coinname', models.CharField(max_length=200)),
                ('txid', models.CharField(max_length=200)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('from_user', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_myzr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfMyzrJson',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('addtime', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('coinname', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'bf_myzr_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfRegPrize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=55)),
                ('addtime', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('childuid', models.IntegerField()),
                ('childuname', models.CharField(max_length=55)),
                ('coinid', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_reg_prize',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfTrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('market', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('deal', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('type', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('feerate_buy', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('feerate_sell', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'bf_trade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfTradeJson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market', models.CharField(max_length=100)),
                ('data', models.CharField(max_length=500)),
                ('type', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_trade_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfTradeJsonCopy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market', models.CharField(max_length=100)),
                ('data', models.CharField(max_length=500)),
                ('type', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_trade_json_copy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfTradeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('peerid', models.IntegerField()),
                ('market', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee_buy', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee_sell', models.DecimalField(decimal_places=8, max_digits=20)),
                ('type', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_trade_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfTradePrize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpc', models.FloatField()),
                ('trade_sum', models.DecimalField(decimal_places=6, max_digits=20)),
                ('addtime', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'bf_trade_prize',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfTradeSum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addtime', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=1, max_digits=20)),
                ('prizesum', models.DecimalField(decimal_places=6, max_digits=20)),
                ('history_prize', models.DecimalField(decimal_places=6, max_digits=20)),
            ],
            options={
                'db_table': 'bf_trade_sum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('mobiletime', models.IntegerField()),
                ('password', models.CharField(max_length=32)),
                ('tpwdsetting', models.CharField(max_length=32)),
                ('paypassword', models.CharField(blank=True, max_length=50, null=True)),
                ('invit_1', models.CharField(max_length=50)),
                ('invit_2', models.CharField(max_length=50)),
                ('invit_3', models.CharField(max_length=50)),
                ('truename', models.CharField(blank=True, max_length=32, null=True)),
                ('idcard', models.CharField(blank=True, max_length=32, null=True)),
                ('logins', models.IntegerField()),
                ('ga', models.CharField(blank=True, max_length=50, null=True)),
                ('addip', models.CharField(max_length=50)),
                ('addr', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('alipay', models.CharField(blank=True, max_length=50, null=True)),
                ('invit', models.CharField(blank=True, max_length=50, null=True)),
                ('token', models.CharField(blank=True, max_length=50, null=True)),
                ('mibao_question', models.CharField(blank=True, max_length=200, null=True)),
                ('mibao_answer', models.CharField(blank=True, max_length=200, null=True)),
                ('zhengjian', models.CharField(blank=True, max_length=20, null=True)),
                ('idcard_zheng', models.CharField(blank=True, max_length=200, null=True)),
                ('idcard_fan', models.CharField(blank=True, max_length=200, null=True)),
                ('findpwd_mibao', models.IntegerField(blank=True, null=True)),
                ('findpaypwd_mibao', models.IntegerField(blank=True, null=True)),
                ('is_agree', models.IntegerField(blank=True, null=True)),
                ('idcard_shouchi', models.CharField(blank=True, max_length=200, null=True)),
                ('ethpassword', models.CharField(blank=True, max_length=50, null=True)),
                ('etcpassword', models.CharField(blank=True, max_length=50, null=True)),
                ('pwd_err', models.IntegerField()),
                ('buy_sum', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('sell_sum', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('cpcprize_sum', models.IntegerField(blank=True, null=True)),
                ('trade_sum', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('gjcode', models.IntegerField()),
                ('enname', models.CharField(blank=True, max_length=50, null=True)),
                ('headimg', models.CharField(blank=True, max_length=255, null=True)),
                ('goodnum', models.IntegerField()),
                ('goodcomm', models.IntegerField()),
                ('jianjie', models.CharField(blank=True, max_length=255, null=True)),
                ('history', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sftime_sum', models.IntegerField()),
                ('first_trade_time', models.IntegerField()),
                ('transact', models.IntegerField()),
                ('xinren', models.TextField(blank=True, null=True)),
                ('pingbi', models.TextField(blank=True, null=True)),
                ('ixinren', models.TextField(blank=True, null=True)),
                ('ipingbi', models.TextField(blank=True, null=True)),
                ('trade_id', models.TextField(blank=True, null=True)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('cpcpassword', models.CharField(blank=True, max_length=100, null=True)),
                ('marketid', models.CharField(blank=True, max_length=55, null=True)),
                ('socket_token', models.CharField(blank=True, max_length=32, null=True)),
                ('login_time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bf_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfUserBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('bank', models.CharField(max_length=200)),
                ('bankprov', models.CharField(max_length=200)),
                ('bankcity', models.CharField(max_length=200)),
                ('bankaddr', models.CharField(max_length=200)),
                ('bankcard', models.CharField(max_length=200)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_user_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfUserBankType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('url', models.CharField(max_length=200)),
                ('img', models.CharField(max_length=200)),
                ('mytx', models.CharField(max_length=200)),
                ('remark', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_user_bank_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfUserCoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('btc', models.DecimalField(decimal_places=8, max_digits=20)),
                ('btcd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('btcb', models.CharField(max_length=200)),
                ('ltc', models.DecimalField(decimal_places=8, max_digits=20)),
                ('ltcd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('ltcb', models.CharField(max_length=200)),
                ('eth', models.DecimalField(decimal_places=8, max_digits=20)),
                ('ethd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('ethb', models.CharField(max_length=200)),
                ('cusd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('cusdd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('usdt', models.DecimalField(decimal_places=8, max_digits=20)),
                ('usdtd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('usdtb', models.CharField(max_length=200)),
                ('bch', models.DecimalField(decimal_places=8, max_digits=20)),
                ('bchd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('bchb', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'bf_user_coin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfUsercoinClear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('num', models.DecimalField(decimal_places=4, max_digits=12)),
                ('ctime', models.IntegerField()),
                ('coin', models.CharField(max_length=11)),
            ],
            options={
                'db_table': 'bf_usercoin_clear',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfUserLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('userid', models.IntegerField()),
                ('type', models.CharField(max_length=30)),
                ('remark', models.CharField(max_length=50)),
                ('addip', models.CharField(max_length=20)),
                ('addr', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_user_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfUserLogCopy',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('userid', models.IntegerField()),
                ('type', models.CharField(max_length=30)),
                ('remark', models.CharField(max_length=50)),
                ('addip', models.CharField(max_length=20)),
                ('addr', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_user_log_copy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfUserQianbao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('coinname', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('addr', models.CharField(max_length=200)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_user_qianbao',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('type', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
            ],
            options={
                'db_table': 'bf_vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfVoteType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('status', models.IntegerField()),
                ('zancheng', models.IntegerField()),
                ('fandui', models.IntegerField()),
                ('canyu', models.IntegerField()),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('zsptcoin', models.IntegerField()),
                ('cpccost', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('rjreason', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bf_vote_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BfZcbatchError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zcid', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('beizhu', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('userid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bf_zcbatch_error',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_hash', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('block_hash', models.CharField(blank=True, max_length=100, null=True)),
                ('from_field', models.CharField(blank=True, db_column='from', max_length=100, null=True)),
                ('to', models.CharField(blank=True, max_length=100, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('gas', models.IntegerField(blank=True, null=True)),
                ('gas_price', models.IntegerField(blank=True, null=True)),
                ('nonce', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAdBuy',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ad_no', models.CharField(max_length=15, unique=True)),
                ('userid', models.IntegerField()),
                ('location', models.IntegerField()),
                ('currency', models.IntegerField()),
                ('margin', models.DecimalField(decimal_places=2, max_digits=4)),
                ('min_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('pay_method', models.CharField(max_length=25)),
                ('message', models.CharField(max_length=500)),
                ('due_time', models.IntegerField()),
                ('safe_option', models.IntegerField()),
                ('trust_only', models.IntegerField()),
                ('open_time', models.CharField(max_length=100)),
                ('add_time', models.IntegerField()),
                ('state', models.IntegerField()),
                ('finished_time', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField()),
                ('coin', models.IntegerField()),
                ('fee', models.DecimalField(decimal_places=2, max_digits=13)),
                ('skaccount', models.CharField(blank=True, max_length=255, null=True)),
                ('deal_bnum', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
            ],
            options={
                'db_table': 'tw_ad_buy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=16)),
                ('nickname', models.CharField(max_length=50)),
                ('mobile', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=32)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('last_login_time', models.IntegerField()),
                ('last_login_ip', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAdSell',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ad_no', models.CharField(max_length=15, unique=True)),
                ('userid', models.IntegerField()),
                ('location', models.IntegerField()),
                ('currency', models.IntegerField()),
                ('margin', models.DecimalField(decimal_places=2, max_digits=4)),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('min_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('pay_method', models.CharField(max_length=25)),
                ('message', models.CharField(max_length=500)),
                ('safe_option', models.IntegerField()),
                ('trust_only', models.IntegerField()),
                ('open_time', models.CharField(max_length=100)),
                ('add_time', models.IntegerField()),
                ('state', models.IntegerField()),
                ('finished_time', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField()),
                ('coin', models.IntegerField()),
                ('fee', models.DecimalField(decimal_places=2, max_digits=13)),
                ('skaccount', models.CharField(blank=True, max_length=255, null=True)),
                ('deal_bnum', models.DecimalField(decimal_places=2, max_digits=13)),
            ],
            options={
                'db_table': 'tw_ad_sell',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAdver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('url', models.CharField(max_length=100)),
                ('img', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('look', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_adver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAreaCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_zh', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('shortname', models.CharField(max_length=255)),
                ('areacode', models.IntegerField()),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tw_area_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(blank=True, null=True)),
                ('adminid', models.IntegerField()),
                ('type', models.CharField(max_length=100)),
                ('hits', models.IntegerField()),
                ('footer', models.IntegerField()),
                ('index', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('img', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tw_article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwArticleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('index', models.CharField(max_length=50)),
                ('footer', models.CharField(max_length=50)),
                ('shang', models.CharField(max_length=50)),
                ('content', models.TextField(blank=True, null=True)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_article_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAuthExtend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('extend_id', models.IntegerField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_auth_extend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=20)),
                ('type', models.IntegerField()),
                ('title', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=80)),
                ('status', models.IntegerField()),
                ('rules', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'tw_auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAuthGroupAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField()),
                ('group_id', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_auth_group_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwAuthRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=20)),
                ('type', models.IntegerField()),
                ('name', models.CharField(max_length=80)),
                ('title', models.CharField(max_length=20)),
                ('status', models.IntegerField()),
                ('condition', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'tw_auth_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwBch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=10)),
                ('price', models.DecimalField(decimal_places=8, max_digits=30)),
                ('updatetime', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_bch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwBtc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('name_yw', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=10)),
                ('price', models.DecimalField(decimal_places=8, max_digits=30)),
                ('updatetime', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_btc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwBtcLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=55)),
                ('userid', models.IntegerField()),
                ('ctime', models.IntegerField()),
                ('type', models.IntegerField()),
                ('plusminus', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.IntegerField()),
                ('ctype', models.IntegerField()),
                ('action', models.SmallIntegerField()),
                ('addip', models.CharField(blank=True, max_length=50, null=True)),
                ('showname', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tw_btc_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footer_logo', models.CharField(max_length=200)),
                ('huafei_zidong', models.CharField(max_length=200)),
                ('kefu', models.CharField(max_length=200)),
                ('huafei_openid', models.CharField(max_length=200)),
                ('huafei_appkey', models.CharField(max_length=200)),
                ('index_lejimum', models.CharField(max_length=200)),
                ('login_verify', models.CharField(max_length=200)),
                ('fee_meitian', models.CharField(max_length=200)),
                ('top_name', models.CharField(max_length=200)),
                ('web_name', models.CharField(max_length=200)),
                ('web_title', models.CharField(max_length=200)),
                ('web_logo', models.CharField(max_length=200)),
                ('web_llogo_small', models.CharField(max_length=200)),
                ('web_keywords', models.CharField(blank=True, max_length=200, null=True)),
                ('web_description', models.CharField(blank=True, max_length=200, null=True)),
                ('web_close', models.CharField(blank=True, max_length=255, null=True)),
                ('web_close_cause', models.CharField(blank=True, max_length=255, null=True)),
                ('web_icp', models.CharField(blank=True, max_length=255, null=True)),
                ('web_cnzz', models.CharField(blank=True, max_length=255, null=True)),
                ('web_ren', models.CharField(blank=True, max_length=255, null=True)),
                ('web_reg', models.TextField(blank=True, null=True)),
                ('market_mr', models.CharField(blank=True, max_length=255, null=True)),
                ('xnb_mr', models.CharField(blank=True, max_length=255, null=True)),
                ('rmb_mr', models.CharField(blank=True, max_length=255, null=True)),
                ('web_waring', models.CharField(blank=True, max_length=255, null=True)),
                ('moble_type', models.CharField(blank=True, max_length=255, null=True)),
                ('moble_url', models.CharField(blank=True, max_length=255, null=True)),
                ('moble_user', models.CharField(blank=True, max_length=255, null=True)),
                ('moble_pwd', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_moble', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_weibo', models.TextField(blank=True, null=True)),
                ('contact_tqq', models.TextField(blank=True, null=True)),
                ('contact_qq', models.TextField(blank=True, null=True)),
                ('contact_qqun', models.TextField(blank=True, null=True)),
                ('contact_weixin', models.TextField(blank=True, null=True)),
                ('contact_weixin_img', models.TextField(blank=True, null=True)),
                ('contact_email', models.TextField(blank=True, null=True)),
                ('contact_alipay', models.TextField(blank=True, null=True)),
                ('contact_alipay_img', models.TextField(blank=True, null=True)),
                ('contact_bank', models.TextField(blank=True, null=True)),
                ('user_truename', models.TextField(blank=True, null=True)),
                ('user_moble', models.TextField(blank=True, null=True)),
                ('user_alipay', models.TextField(blank=True, null=True)),
                ('user_bank', models.TextField(blank=True, null=True)),
                ('user_text_truename', models.TextField(blank=True, null=True)),
                ('user_text_moble', models.TextField(blank=True, null=True)),
                ('user_text_alipay', models.TextField(blank=True, null=True)),
                ('user_text_bank', models.TextField(blank=True, null=True)),
                ('user_text_log', models.TextField(blank=True, null=True)),
                ('user_text_password', models.TextField(blank=True, null=True)),
                ('user_text_paypassword', models.TextField(blank=True, null=True)),
                ('mytx_min', models.TextField(blank=True, null=True)),
                ('mytx_max', models.TextField(blank=True, null=True)),
                ('mytx_bei', models.TextField(blank=True, null=True)),
                ('mytx_coin', models.TextField(blank=True, null=True)),
                ('mytx_fee_min', models.FloatField(blank=True, null=True)),
                ('mytx_fee', models.TextField(blank=True, null=True)),
                ('trade_min', models.TextField(blank=True, null=True)),
                ('trade_max', models.TextField(blank=True, null=True)),
                ('trade_limit', models.TextField(blank=True, null=True)),
                ('trade_text_log', models.TextField(blank=True, null=True)),
                ('issue_ci', models.TextField(blank=True, null=True)),
                ('issue_jian', models.TextField(blank=True, null=True)),
                ('issue_min', models.TextField(blank=True, null=True)),
                ('issue_max', models.TextField(blank=True, null=True)),
                ('money_min', models.TextField(blank=True, null=True)),
                ('money_max', models.TextField(blank=True, null=True)),
                ('money_bei', models.TextField(blank=True, null=True)),
                ('money_text_index', models.TextField(blank=True, null=True)),
                ('money_text_log', models.TextField(blank=True, null=True)),
                ('money_text_type', models.TextField(blank=True, null=True)),
                ('invit_type', models.TextField(blank=True, null=True)),
                ('invit_fee1', models.TextField(blank=True, null=True)),
                ('invit_fee2', models.TextField(blank=True, null=True)),
                ('invit_fee3', models.TextField(blank=True, null=True)),
                ('invit_text_txt', models.TextField(blank=True, null=True)),
                ('invit_text_log', models.TextField(blank=True, null=True)),
                ('index_notice_1', models.TextField(blank=True, null=True)),
                ('index_notice_11', models.TextField(blank=True, null=True)),
                ('index_notice_2', models.TextField(blank=True, null=True)),
                ('index_notice_22', models.TextField(blank=True, null=True)),
                ('index_notice_3', models.TextField(blank=True, null=True)),
                ('index_notice_33', models.TextField(blank=True, null=True)),
                ('index_notice_4', models.TextField(blank=True, null=True)),
                ('index_notice_44', models.TextField(blank=True, null=True)),
                ('text_footer', models.TextField(blank=True, null=True)),
                ('shop_text_index', models.TextField(blank=True, null=True)),
                ('shop_text_log', models.TextField(blank=True, null=True)),
                ('shop_text_addr', models.TextField(blank=True, null=True)),
                ('shop_text_view', models.TextField(blank=True, null=True)),
                ('huafei_text_index', models.IntegerField(blank=True, null=True)),
                ('huafei_text_log', models.TextField(blank=True, null=True)),
                ('addtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('shop_coin', models.CharField(max_length=200)),
                ('shop_logo', models.CharField(max_length=200)),
                ('shop_login', models.CharField(max_length=200)),
                ('index_html', models.CharField(max_length=50)),
                ('trade_hangqing', models.CharField(max_length=50)),
                ('trade_moshi', models.CharField(max_length=50)),
                ('mytx_day_max', models.DecimalField(decimal_places=0, max_digits=13)),
                ('en_web_reg', models.TextField(blank=True, null=True)),
                ('tui_jy_jl', models.DecimalField(blank=True, decimal_places=4, max_digits=13, null=True)),
                ('before_cpc', models.BigIntegerField()),
                ('fee_bili', models.DecimalField(decimal_places=2, max_digits=4)),
                ('least_btc', models.DecimalField(decimal_places=2, max_digits=4)),
                ('sfk_time', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwCusd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=10)),
                ('price', models.DecimalField(decimal_places=8, max_digits=30)),
                ('updatetime', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_cusd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwCusdLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=55)),
                ('userid', models.IntegerField()),
                ('ctime', models.IntegerField()),
                ('type', models.IntegerField()),
                ('plusminus', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.IntegerField()),
                ('ctype', models.IntegerField()),
                ('action', models.SmallIntegerField()),
                ('addip', models.CharField(blank=True, max_length=50, null=True)),
                ('showname', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tw_cusd_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwDaohang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_daohang',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwEth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=10)),
                ('price', models.DecimalField(decimal_places=8, max_digits=30)),
                ('updatetime', models.IntegerField()),
                ('name_yw', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'tw_eth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwEthHash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ethhash', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(max_length=100)),
                ('addtime', models.IntegerField()),
                ('isdeal', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tw_eth_hash',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwEthLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=55)),
                ('userid', models.IntegerField()),
                ('ctime', models.IntegerField()),
                ('type', models.IntegerField()),
                ('plusminus', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.IntegerField()),
                ('ctype', models.IntegerField()),
                ('action', models.SmallIntegerField()),
                ('addip', models.CharField(blank=True, max_length=50, null=True)),
                ('showname', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tw_eth_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwEthTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zc_addr', models.CharField(max_length=100)),
                ('zr_addr', models.CharField(max_length=100)),
                ('zc_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('addtime', models.IntegerField()),
                ('zchash', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tw_eth_transfer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwEthzr',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('fromaddress', models.CharField(max_length=255)),
                ('toaddress', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('addtime', models.IntegerField()),
                ('orderno', models.BigIntegerField()),
                ('finished', models.IntegerField()),
                ('otherid', models.BigIntegerField()),
                ('transaction_hash', models.CharField(max_length=255)),
                ('block_hash', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tw_ethzr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.CharField(max_length=255)),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField(blank=True, null=True)),
                ('subject', models.CharField(max_length=50)),
                ('attachone', models.CharField(blank=True, max_length=200, null=True)),
                ('attachtwo', models.CharField(blank=True, max_length=200, null=True)),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=50)),
                ('isread', models.IntegerField()),
                ('txid', models.CharField(blank=True, max_length=100, null=True)),
                ('freshtime', models.IntegerField(blank=True, null=True)),
                ('userstatus', models.IntegerField(blank=True, null=True)),
                ('adminstatus', models.IntegerField(blank=True, null=True)),
                ('recordno', models.BigIntegerField()),
            ],
            options={
                'db_table': 'tw_feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwFeedbackReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=50)),
                ('addtime', models.IntegerField()),
                ('content', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tw_feedback_reply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwFooter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100)),
                ('img', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_footer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100)),
                ('img', models.CharField(max_length=100)),
                ('mytx', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('look_type', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=10)),
                ('enname', models.CharField(blank=True, max_length=55, null=True)),
                ('name_yw', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'tw_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwLtc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=10)),
                ('price', models.DecimalField(decimal_places=8, max_digits=30)),
                ('updatetime', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_ltc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwLtcLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=55)),
                ('userid', models.IntegerField()),
                ('ctime', models.IntegerField()),
                ('type', models.IntegerField()),
                ('plusminus', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.IntegerField()),
                ('ctype', models.IntegerField()),
                ('action', models.SmallIntegerField()),
                ('addip', models.CharField(blank=True, max_length=50, null=True)),
                ('showname', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tw_ltc_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('pid', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('url', models.CharField(max_length=255)),
                ('hide', models.IntegerField()),
                ('tip', models.CharField(max_length=255)),
                ('group', models.CharField(blank=True, max_length=50, null=True)),
                ('is_dev', models.IntegerField()),
                ('ico_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tw_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMycz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('num', models.DecimalField(decimal_places=2, max_digits=11)),
                ('mum', models.DecimalField(decimal_places=2, max_digits=11)),
                ('type', models.CharField(max_length=50)),
                ('tradeno', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=250)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('alipay_truename', models.CharField(blank=True, max_length=20, null=True)),
                ('alipay_account', models.CharField(blank=True, max_length=35, null=True)),
                ('ewmname', models.CharField(max_length=50)),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bank', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'tw_mycz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMyczInvit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('invitid', models.IntegerField()),
                ('num', models.DecimalField(decimal_places=2, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('coinname', models.CharField(max_length=50)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('remark', models.CharField(max_length=250)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_mycz_invit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMyczType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max', models.CharField(max_length=200)),
                ('min', models.CharField(max_length=200)),
                ('kaihu', models.CharField(max_length=200)),
                ('truename', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('img', models.CharField(max_length=50)),
                ('extra', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'tw_mycz_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMytx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('num', models.IntegerField()),
                ('fee', models.DecimalField(decimal_places=2, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=2, max_digits=20)),
                ('truename', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=32)),
                ('bank', models.CharField(max_length=250)),
                ('bankprov', models.CharField(max_length=50)),
                ('bankcity', models.CharField(max_length=50)),
                ('bankaddr', models.CharField(max_length=50)),
                ('bankcard', models.CharField(max_length=200)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_mytx',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMyzc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('coinname', models.CharField(max_length=200)),
                ('txid', models.CharField(max_length=200)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('to_user', models.IntegerField()),
                ('cointype', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_myzc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMyzcEth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('coinname', models.CharField(max_length=200)),
                ('txid', models.CharField(max_length=200)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('to_user', models.IntegerField()),
                ('cointype', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_myzc_eth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMyzcFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('coinname', models.CharField(max_length=200)),
                ('txid', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=200)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_myzc_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMyzr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=200)),
                ('coinname', models.CharField(max_length=200)),
                ('txid', models.CharField(max_length=200)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('from_user', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_myzr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwMyzrJson',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('addtime', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('coinname', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tw_myzr_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwOrderBuy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buy_id', models.IntegerField()),
                ('buy_bid', models.IntegerField()),
                ('sell_id', models.IntegerField()),
                ('sell_sid', models.IntegerField()),
                ('deal_amount', models.DecimalField(decimal_places=2, max_digits=13)),
                ('deal_price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('deal_ctype', models.IntegerField()),
                ('deal_num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('ctime', models.IntegerField()),
                ('dktime', models.IntegerField()),
                ('ltime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('desc', models.CharField(blank=True, max_length=100, null=True)),
                ('finished_time', models.IntegerField(blank=True, null=True)),
                ('order_no', models.CharField(max_length=55, unique=True)),
                ('cancle_op', models.IntegerField()),
                ('buy_pj', models.IntegerField(blank=True, null=True)),
                ('sell_pj', models.IntegerField(blank=True, null=True)),
                ('su_type', models.IntegerField()),
                ('su_reason', models.TextField(blank=True, null=True)),
                ('sutp', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField()),
                ('deal_coin', models.IntegerField()),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('skaccount', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('adminhandle', models.IntegerField()),
                ('lmessage', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tw_order_buy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwOrderSell',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('buy_id', models.IntegerField()),
                ('buy_bid', models.IntegerField()),
                ('sell_id', models.IntegerField()),
                ('sell_sid', models.IntegerField()),
                ('deal_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('deal_price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('deal_ctype', models.IntegerField()),
                ('deal_num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('ctime', models.IntegerField()),
                ('dktime', models.IntegerField()),
                ('ltime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('desc', models.CharField(blank=True, max_length=100, null=True)),
                ('finished_time', models.IntegerField(blank=True, null=True)),
                ('order_no', models.CharField(max_length=55, unique=True)),
                ('buy_pj', models.IntegerField(blank=True, null=True)),
                ('sell_pj', models.IntegerField(blank=True, null=True)),
                ('su_type', models.IntegerField()),
                ('su_reason', models.TextField(blank=True, null=True)),
                ('cancle_op', models.IntegerField()),
                ('sutp', models.CharField(blank=True, max_length=155, null=True)),
                ('type', models.IntegerField()),
                ('deal_coin', models.IntegerField()),
                ('fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('skaccount', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('adminhandle', models.IntegerField()),
                ('lmessage', models.CharField(blank=True, max_length=255, null=True)),
                ('fee1', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
            ],
            options={
                'db_table': 'tw_order_sell',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwOrderTemp',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ordertype', models.IntegerField()),
                ('buy_id', models.IntegerField()),
                ('buy_bid', models.IntegerField()),
                ('sell_id', models.IntegerField()),
                ('sell_sid', models.IntegerField()),
                ('ctime', models.IntegerField()),
                ('advtype', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_order_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwPayMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('enname', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'tw_pay_method',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rgname', models.CharField(max_length=100)),
                ('addtime', models.IntegerField()),
                ('dluser', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'tw_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwTradeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('peerid', models.IntegerField()),
                ('market', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('num', models.DecimalField(decimal_places=8, max_digits=20)),
                ('mum', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee_buy', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee_sell', models.DecimalField(decimal_places=8, max_digits=20)),
                ('type', models.IntegerField()),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_trade_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwTradePrize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpc', models.DecimalField(decimal_places=6, max_digits=20)),
                ('trade_sum', models.DecimalField(decimal_places=1, max_digits=20)),
                ('addtime', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('username', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tw_trade_prize',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwUsdt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=10)),
                ('price', models.DecimalField(decimal_places=8, max_digits=30)),
                ('updatetime', models.IntegerField()),
                ('name_yw', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'tw_usdt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwUsdtLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=55)),
                ('userid', models.IntegerField()),
                ('ctime', models.IntegerField()),
                ('type', models.IntegerField()),
                ('plusminus', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.IntegerField()),
                ('ctype', models.IntegerField()),
                ('action', models.SmallIntegerField()),
                ('addip', models.CharField(blank=True, max_length=50, null=True)),
                ('showname', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tw_usdt_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwUserLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('userid', models.IntegerField()),
                ('type', models.CharField(max_length=30)),
                ('remark', models.CharField(max_length=50)),
                ('addip', models.CharField(max_length=20)),
                ('addr', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_user_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwUserLogCopy',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('userid', models.IntegerField()),
                ('type', models.CharField(max_length=30)),
                ('remark', models.CharField(max_length=50)),
                ('addip', models.CharField(max_length=20)),
                ('addr', models.CharField(max_length=100)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_user_log_copy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwUserQianbao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('coinname', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('addr', models.CharField(max_length=200)),
                ('sort', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tw_user_qianbao',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwZcbatchError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zcid', models.IntegerField()),
                ('addtime', models.IntegerField()),
                ('beizhu', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('userid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tw_zcbatch_error',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('is_access_index_once', models.IntegerField()),
            ],
            options={
                'db_table': 'user_information',
                'managed': False,
            },
        ),
    ]
